# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type Page {
  id: ID!
  slug: String!
  enabled: Boolean!
  content: String!
  meta: String!
  dateAdded: Int!
  dateUpdated: Int!
}

input PageFilter {
  id: ID
  ids: [ID]
  slug: String
}

input PageInput {
  slug: String!
  enabled: Boolean
  content: String!
  meta: String
}

type User {
  id: ID!
  firstName: String
  lastName: String
  username: String!
  email: String!
  userType: String!
  userMeta: String!
  dateAdded: Int!
  dateUpdaetd: Int!
  enabled: Boolean!
}

input UserFilter {
  id: ID
  email: String
  userType: String
}

input UserInput {
  firstName: String
  lastName: String
  username: String!
  email: String!
  userType: String
  userMeta: String
  enabled: Boolean
  password: String!
}

type BlogPost {
  id: ID!
  name: String!
  slug: String!
  draft: Boolean!
  public: Boolean!
  content: String!
  meta: String!
  dateAdded: Int!
  dateUpdated: Int!
}

input BlogFilter {
  id: ID
  slug: String
}

input BlogPostInput {
  name: String!
  slug: String!
  draft: Boolean
  public: Boolean
  content: String!
  meta: String
}

input SignupUser {
  firstName: String
  lastName: String
  email: String!
  username: String!
  password: String!
  userType: String
  enabled: Boolean
  userMeta: String
}

type Query {
  pages(pageFilter: PageFilter): [Page!]!
  users(userFilter: UserFilter): [User!]!
  blogPosts(blogFilter: BlogFilter): [BlogPost!]!
}

type Mutation {
  addUser(input: UserInput): User!
  editUser(id: ID!, input: UserInput): User!
  deleteUser(id: ID!): ID!

  addPage(input: PageInput): Page!
  editPage(id: ID!, input: PageInput): Page!
  deletePage(id: ID!): ID!

  addBlogPost(input: BlogPostInput): BlogPost!
  editBlogPost(id: ID!, input: BlogPostInput): BlogPost!
  deleteBlogPost(id: ID!): ID!

  login(email: String, username: String, password: String!): String!
  signup(user: SignupUser!): String!
}